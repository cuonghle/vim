"""to completion 
"set ofu=syntaxcomplete#Complete
"map for japanese keys
map + :

let g:LargeFile = 30

runtime bundle/pathogen/autoload/pathogen.vim
call pathogen#infect()
call pathogen#helptags()

"set guifont="courier new":h10:w5
syntax on
filetype indent plugin on

"augroup filetypedetect 
"    "au BufNewFile,BufRead *.sv let b:AutoPairs = {'(':')', '[':']', '{':'}',"'":"'",'"':'"' }
"   let g:AutoPairs = {'(':')', '[':']', '{':'}',"'":"'",'"':'"' }
"augroup end
"autocmd FileType systemverilog let g:AutoPairs = {'(':')', '[':']', '{':'}','"':'"' }
"autocmd FileType conf          let g:AutoPairs = {'(':')', '[':']', '{':'}','"':'"' }
autocmd FileType verilog,systemverilog let b:delimitMate_matchpairs = "(:),[:],{:}"
autocmd FileType verilog,systemverilog let delimitMate_quotes = "\" ' "
autocmd FileType conf          let b:delimitMate_matchpairs = "(:),[:],{:}"


"Indent
set tabstop=2 softtabstop=2 shiftwidth=2 expandtab
set wrap! nobackup writebackup

" Uncomment the following to have Vim jump to the last position when                                                       
" reopening a file
if has("autocmd")
   au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
   "au BufWinLeave * silent mkview
   "au BufWinEnter * silent loadview
endif

" Use pathogen to load plugins from bundle directory
"filetype off
"call pathogen#incubate()
"call pathogen#helptags()
"filetype on

"set path for Linux command execution
set path+=.,~/bin

"auto reload
":set ar

"avoid mapping
let VCSCommandDisableExtensionMappings=1
let VCSCommandDisableMappings=1

set t_Co=256
let g:CSApprox_konsole = 1

set guifont="ubuntu mono":h11:w5

"verilog
autocmd FileType verilog let g:AutoPairs = {'(':')', '[':']', '{':'}',"'":"'",'"':'"' }
"""

set completeopt+=longest
if has("wildmenu")
  set wildmenu
  set wildmode=list:longest
  set wildignore+=*.a,*.o
  set wildignore+=*.bmp,*.gif,*.ico,*.jpg,*.png
  set wildignore+=.DS_Store,.git,.hg,.svn
  set wildignore+=*~,*.swp,*.tmp
endif

so ~/.vim/mysetting/loadall.vim

"
"if file is not exist, trial if it exists from "wa" folder
autocmd BufNewFile * call OpenFromRootPath()

let g:syntastic_enable_signs = 1
let g:syntastic_auto_loc_list = 0
"let g:syntastic_error_symbol = '✗'
"let g:syntastic_style_error_symbol = '✗'
"let g:syntastic_warning_symbol = '⚠'
"let g:syntastic_style_warning_symbol = '⚠'
let g:syntastic_error_symbol = 'X'
let g:syntastic_style_error_symbol = 'x'
let g:syntastic_warning_symbol = 'W'
let g:syntastic_style_warning_symbol = 'w'

runtime macros/matchit.vim
"autocmd FileType html let b:match_words = '<\(\w\w*\):</\1,{:}'
"autocmd FileType xhtml let b:match_words = '<\(\w\w*\):</\1,{:}'
"autocmd FileType xml let b:match_words = '<\(\w\w*\):</\1,{:}'

set iskeyword+=-,{,}

"set filename
set isfname+={,},$
set isfname-=,
set isfname-=+
set isfname-=:

"auto reload if file changed
set updatetime=2000
set autoread
au CursorHold * checktime

"for fish-shell
"set shell=/bin/bash 
set ignorecase infercase
"set infercase
set incsearch hlsearch
"set cmdheight=2
"set cursorline cursorcolumn
set cursorline 
set ruler
set nocompatible nolist nostartofline number

"set mouse=a
"set title

"TESTING
"set completeopt+=longest

" change background after exist vim
au VimLeave * :silent !echo -ne "\033[0m"

"disable bell
set vb!
set novisualbell
"set t_vb=
"
"allow mouse in screen
set ttymouse=xterm2

""to allow to copy text among VIM instances
"set clipboard=unnamedplus

"allow to search more paths/filetypes when 'gf' fail
"we often need to work on verilog, so add this here to work on all filetypes
"setlocal includeexpr=substitute(substitute(v:fname,'::','/','g'),'$','.v','')
set suffixesadd+=.v,.bv,.sv
if $MYGROUP!=""
  set path+=/proj/$MYGROUP/wa/$USER/
  set path+=/proj/$MYGROUP/wa/$USER/design/iopads
  set path+=/proj/$MYGROUP/wa/$USER/design/*/net
  set path+=/proj/$MYGROUP/wa/$USER/design/top/sim/model
  set path+=/proj/$MYGROUP/wa/CPU_SUBSYS/current_HHYLP1/design/hyperion_cpusubsys_core/top/net
  set path+=/proj/$MYGROUP/wa/CPU_SUBSYS/current_HHYLP1/design/*/*
  set path+=/proj/$MYGROUP/wa/CPU_SUBSYS/current_HHYLP1/design/*/*
  set path+=/proj/$MYGROUP/wa/TAPEOUT_R1P0/lib/verilog
  set path+=/proj/$MYGROUP/libset/current_libset/vg/beh
end

"execute "set <xUp>=\e[1;*A"
"execute "set <xDown>=\e[1;*B"
"execute "set <xRight>=\e[1;*C"
"execute "set <xLeft>=\e[1;*D"
"execute "set <xHome>=\e[1;*H"
"execute "set <xEnd>=\e[1;*F"
"execute "set <PageUp>=\e[5;*~"
"execute "set <PageDown>=\e[6;*~"
"execute "set <F1>=\eOP"
"execute "set <F2>=\eOQ"
"execute "set <F3>=\eOR"
"execute "set <F9>=\e[20;*~"
"execute "set <F10>=\e[21;*~"
"execute "set <F11>=\e[23;*~"
"execute "set <F12>=\e[24;*~"

"don't unload buffer, to avoid large file openned in another tabs
"set hidden

"testing
:hi Title ctermfg=LightBlue ctermbg=Magenta
":hi TabLineFill ctermfg=LightGreen ctermbg=DarkGreen
":hi TabLine ctermfg=Blue ctermbg=Yellow
":hi TabLineSel ctermfg=Red ctermbg=Yellow
":hi Title ctermfg=LightBlue ctermbg=Magenta
"hi TabLine      guifg=#333 guibg=#222 gui=none ctermfg=254 ctermbg=238 cterm=none
"hi TabLineSel   guifg=#666 guibg=#222 gui=bold ctermfg=231 ctermbg=235 cterm=bold
"hi TabLineFill  guifg=#999 guibg=#222 gui=none ctermfg=254 ctermbg=238 cterm=none
"
"current-cursor to top/bottom
set scrolloff=5

"ignore space when 'vimdiff'
if &diff
  set diffopt+=iwhite
  set diffexpr=""
endif
"let g:diffignore = '".*diffignore.*"'
"set diffexpr=MyDiff()
"function! MyDiff()
"    let opt = ""
"    if exists("g:diffignore") && g:diffignore != ""
"        let opt = "-I " . g:diffignore . " "
"    endif
"    "if &diffopt =~ "icase"
"        let opt = opt . "-i "
"    "endif
"    "if &diffopt =~ "iwhite"
"        let opt = opt . "-b "
"    "endif
"    silent execute "!diff -a --binary " . opt . v:fname_in . " " .
"        \ v:fname_new . " > " . v:fname_out
"endfunction

let NERDTreeWinSize=50
"set iskeyword+=/
"

